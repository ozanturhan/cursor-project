# Cursor Rules Configuration

# Documentation References
WORKFLOW_RULES=docs/DEVELOPMENT_WORKFLOW.md
RFC_PATH=docs/rfc
PROGRESS_PATH=docs/progress/PROGRESS_TRACKER.md
PRD_PATH=docs/PRD.md
CONVERSATION_PATH=docs/conversations
API_DOCS_PATH=apps/backend/swagger

# Path Validation
REQUIRED_PATHS=${WORKFLOW_RULES},${RFC_PATH},${PROGRESS_PATH},${PRD_PATH},${CONVERSATION_PATH},${API_DOCS_PATH}
VALIDATE_PATHS=true

# Rule Validation
VALIDATE_WORKFLOW=${WORKFLOW_RULES}
VALIDATE_PROGRESS=${PROGRESS_PATH}
VALIDATE_RFC=${RFC_PATH}
VALIDATE_PRD=${PRD_PATH}
VALIDATE_CONVERSATION=${CONVERSATION_PATH}

# File Patterns
TEST_FILES=**/*.{spec,test}.{ts,tsx}
ENV_FILES=.env*
IGNORE_PATTERNS=node_modules,dist,.next,coverage

# Frontend Rules
FRONTEND_RULES={
  "useEffect": {
    "avoid": true,
    "allowedCases": [
      "data fetching (when not possible with React Query or similar)",
      "managing subscriptions/event listeners",
      "integrating with non-React libraries",
      "managing focus/scroll position"
    ],
    "alternatives": {
      "url-params": "use server components or router events",
      "data-fetching": "use React Query or SWR",
      "form-handling": "use react-hook-form or similar",
      "state-updates": "use event handlers or state management libraries",
      "api-calls": "use React Query mutations or similar"
    }
  },
  "searchParams": {
    "rules": [
      "Server components using searchParams must be async",
      "Always await searchParams and destructure values",
      "Use pattern: const { param1, param2 } = await searchParams"
    ],
    "example": "export default async function Page({ searchParams }) {\n  const { value } = await searchParams;\n}"
  }
}

# Automation Preferences
AUTO_FORMAT=true
AUTO_LINT=true
TEST_ON_COMMIT=true
BLOCK_ON_ERROR=true

# Turborepo Configuration
USE_TURBOREPO=true
TURBO_TASKS={
  "dev": "turbo run dev --filter=",
  "build": "turbo run build --filter=",
  "test": "turbo run test --filter=",
  "lint": "turbo run lint --filter=",
  "db:generate": "turbo run db:generate --filter=",
  "db:push": "turbo run db:push --filter="
}
PREFERRED_PACKAGE_MANAGER=yarn

# Backend E2E Tests (Integration Tests)
BACKEND_E2E_TESTS=apps/backend/scripts/test-e2e.sh